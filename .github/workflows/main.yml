name: Build and Deploy Nginx to EKS

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2  # Update to your region

      - name: Build Nginx Docker image
        run: |
          docker build -t nginx-image .


      - name: Authenticate Docker to ECR
        run: |
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin <825765405225>.dkr.ecr.us-east-2.amazonaws.com

      - name: Tag and push to ECR
        run: |
          docker tag nginx-image:latest <825765405225>.dkr.ecr.us-east-2.amazonaws.com/nginx-image:latest
          docker push <825765405225>.dkr.ecr.us-east-2.amazonaws.com/nginx-image:latest

      - name: Store Docker image in S3
        run: |
          aws s3 cp s3://<mybucketviinu>/nginx-image:latest .
          aws s3 cp <825765405225>.dkr.ecr.us-east-2.amazonaws.com/nginx-image:latest s3://<mybucketviinu>/nginx-image:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Configure kubectl
        run: |
          aws eks --region us-east-2 update-kubeconfig --name rakesh

      - name: Deploy to EKS
        run: |
          kubectl apply -f eks-deployment.yaml

      - name: Create Load Balancer
        run: |
          kubectl expose deployment nginx --type=LoadBalancer --name=nginx-lb

